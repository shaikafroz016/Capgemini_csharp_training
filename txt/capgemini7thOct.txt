using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;

namespace WebApplication10.Controllers
{
    public class EmployeeController : Controller
    {
        // GET: Employee
        public ActionResult Index()
        {
            return View();
        }
        capegemini1Entities1 db = new capegemini1Entities1();
        public ActionResult getrec()
        {
            List<emp> ls = db.emps.ToList();
            return View(ls);
        }

        public ActionResult SearchEmpid()
        {          
            return View();
        }
        public ActionResult SearchEmpid1(string text1)
        {
            int empno = int.Parse(text1);
            emp obj = db.emps.Where(x => x.empno == empno).SingleOrDefault();

            ViewBag.empno ="Empno ="+ obj.empno;
            ViewBag.empname = "Empname =" + obj.empname;
            ViewBag.job = "Job =" + obj.job;
            ViewBag.deptno = "Deptno =" + obj.deptno;
            ViewBag.salary= "Salary =" + obj.salary;

            return View("SearchEmpid");
        }


        public ActionResult SearchDeptno()
        {
            return View();
        }
        public ActionResult SearchDeptno1(string text1)
        {
            int deptno = int.Parse(text1);
            ViewBag.deptno ="Details of Depatment Number "+ deptno;
            List<emp> dls = new List<emp>();

            List<emp> elst = (from d in db.emps where d.deptno == deptno select d).ToList();

            //emp obj;
            //foreach(var x in deptlist)
            //{
            //    obj = new emp();
            //    obj.empno = x.empno;
            //    obj.empname = x.empname;
            //    obj.job = x.job;
            //    obj.deptno = x.deptno;
            //    obj.salary = x.salary;
            //    dls.Add(obj);
            //}
          
            return View(elst);
        }
    }
}



@model List<WebApplication10.emp>
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>getrec</title>
</head>
<body>
   <h1>Employee Details</h1>
    <hr />

    <table>
        <tr>
            <th>Empno</th><th>Empname</th><th>Job</th><th>Deptno</th><th>Salary</th>
            </tr>
            @foreach(var x in Model)
            {
        <tr>
            <td>@Html.DisplayFor(model => x.empno)</td>
            <td>@Html.DisplayFor(model => x.empname)</td>
            <td>@Html.DisplayFor(model => x.job)</td>
            <td>@Html.DisplayFor(model => x.deptno)</td>
            <td>@Html.DisplayFor(model => x.salary)</td>
        </tr>
            }
                   
       
    </table>
    <hr />
</body>
</html>




@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>SearchEmpid</title>
</head>
<body>
    <form id="form1" action="SearchEmpid1" method="post">
        <table width="60%" bgcolor="yellow" border="1">
            <tr>
                <td>Enter Employee Number To Search</td>
                <td><input type="text" id="text1" name="text1" /></td>
                <td><input type="submit" id="submit1" name="submit1" value="Search" /></td>
            </tr>

        </table>
    </form>
    @ViewBag.empno<br />
    @ViewBag.empname<br />
    @ViewBag.job<br />
    @ViewBag.deptno<br />
    @ViewBag.salary<br />

</body>
</html>





@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>SearchDeptno</title>
</head>
<body>
    <form id="form1" action="SearchDeptno1" method="post">
        <table width="60%" bgcolor="yellow" border="1">
            <tr>
                <td>Enter Dept Number To Search</td>
                <td><input type="text" id="text1" name="text1" /></td>
                <td><input type="submit" id="submit1" name="submit1" value="Search" /></td>
            </tr>

        </table>
    </form>
</body>
</html>




@model List<WebApplication10.emp>
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>SearchDeptno1</title>
</head>
<body>
    <h1>@ViewBag.deptno</h1>
    <hr />

    <table>
        <tr>
            <th>Empno</th>
            <th>Empname</th>
            <th>Job</th>
            <th>Deptno</th>
            <th>Salary</th>
        </tr>
        @foreach (var x in Model)
        {
            <tr>
                <td>@Html.DisplayFor(model => x.empno)</td>
                <td>@Html.DisplayFor(model => x.empname)</td>
                <td>@Html.DisplayFor(model => x.job)</td>
                <td>@Html.DisplayFor(model => x.deptno)</td>
                <td>@Html.DisplayFor(model => x.salary)</td>
            </tr>
        }


    </table>
    <hr />
</body>
</html>















using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.Data.SqlClient;
using System.Data;
using WebApplication9.Models;


namespace WebApplication9.Controllers
{
    public class EmployeeController1 : Controller
    {
        public IActionResult Index()
        {
            return View();
        }

        SqlConnection con = new SqlConnection(@"Data Source=DESKTOP-RHC47KF;Initial Catalog=capegemini1;Integrated Security=True");
        List<Employee1> ls = new List<Employee1>();
        Employee1 obj;


        public IActionResult GetRec1()
        {
            con.Open();
            SqlDataAdapter ad = new SqlDataAdapter("select * from emp", con);
            DataSet ds = new DataSet();
            ad.Fill(ds, "emp1");
            EmpDept obj1;

            for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                obj = new Employee1();
                obj.empno = int.Parse(ds.Tables["emp1"].Rows[i].ItemArray[0].ToString());
                obj.empname = ds.Tables["emp1"].Rows[i].ItemArray[1].ToString();
                obj.job = ds.Tables["emp1"].Rows[i].ItemArray[2].ToString();
                obj.deptno = int.Parse(ds.Tables["emp1"].Rows[i].ItemArray[3].ToString());
                obj.salary = int.Parse(ds.Tables["emp1"].Rows[i].ItemArray[4].ToString());

                ls.Add(obj);
            }

            var agg1 = ls.Sum(sum => sum.salary);
            var agg2 = ls.Max(max => max.salary);
            var agg3 = ls.Min(min => min.salary);
            var agg4 = ls.Average(average => average.salary);

            ViewBag.sumsal = agg1;
            ViewBag.maxsal = agg2;
            ViewBag.minsal = agg3;
            ViewBag.avgsal = agg4;



            SqlDataAdapter ad1 = new SqlDataAdapter("select * from dept", con);
            ad1.Fill(ds, "dept1");
            List<Dept1> ls4 = new List<Dept1>();
            Dept1 Dobj;
            for (int i = 0; i < ds.Tables["dept1"].Rows.Count; i++)
            {
                Dobj = new Dept1();
                Dobj.deptno= int.Parse(ds.Tables["dept1"].Rows[i].ItemArray[0].ToString());
                Dobj.deptname = ds.Tables["dept1"].Rows[i].ItemArray[1].ToString();
                Dobj.locid = int.Parse(ds.Tables["dept1"].Rows[i].ItemArray[2].ToString());
              

                ls4.Add(Dobj);
            }

            var result6 = from empobj in ls
                          join dptobj in ls4 on empobj.deptno equals dptobj.deptno orderby empobj.empname
                          select new
                          {
                              empobj.empno,
                              empobj.empname,
                              empobj.job,
                              empobj.deptno,
                              empobj.salary,
                              dptobj.deptname,
                              dptobj.locid
                          };

            var result7 = from empobj in ls
                          join dptobj in ls4 on empobj.deptno equals dptobj.deptno
                          group empobj by empobj.deptno;
                          //select new
                          //{
                          //    empobj.empno,
                          //    empobj.empname,
                          //    empobj.job,
                          //    empobj.deptno,
                          //    empobj.salary,
                          //    dptobj.deptname,
                          //    dptobj.locid
                          //};

            var result8 = from x in ls group x by x.deptno;

            foreach(var x1 in result8)
            {
               

                foreach(Employee1 obj5 in x1)
                {
                  
                }

            }


            List<EmpDept> ls5 = new List<EmpDept>();
            foreach (var obj2 in result6)
            {
                obj1 = new EmpDept();
                obj1.empno = int.Parse(obj2.empno.ToString());
                obj1.empname = obj2.empname;
                obj1.job = obj2.job;
                obj1.deptno = int.Parse(obj2.deptno.ToString());
                obj1.salary = int.Parse(obj2.salary.ToString());
                obj1.deptname = obj2.deptname;
                obj1.locid= int.Parse(obj2.locid.ToString());
                ls5.Add(obj1);

            }


                con.Close();

            return View(ls5);
        }

        public IActionResult GetRec()
        {
            con.Open();
            SqlDataAdapter ad = new SqlDataAdapter("select * from emp", con);
            DataSet ds = new DataSet();
            ad.Fill(ds, "emp1");

            

            for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                obj = new Employee1();
                obj.empno = int.Parse(ds.Tables["emp1"].Rows[i].ItemArray[0].ToString());
                obj.empname = ds.Tables["emp1"].Rows[i].ItemArray[1].ToString();
                obj.job = ds.Tables["emp1"].Rows[i].ItemArray[2].ToString();
                obj.deptno = int.Parse(ds.Tables["emp1"].Rows[i].ItemArray[3].ToString());
                obj.salary = int.Parse(ds.Tables["emp1"].Rows[i].ItemArray[4].ToString());

                ls.Add(obj);
            }

            var result = from x in ls select new { x.empno, x.empname, x.job, x.deptno, x.salary };
            var result1 = from x in ls where x.empno == 1002 select x;
            var result3 = from x in ls where x.deptno == 10 select x;
            var result4 = from x in ls where x.deptno == 10 && x.salary > 8000 select x;                        
            var result5 = from x in ls where x.deptno == 10 && x.salary > 8000 select new { x.empno, x.empname, x.salary };
            var result6 = from x in ls where x.job == "dev" select x;




            List < Employee1 > ls1 = new List<Employee1>();
            foreach (var obj1 in result5)
            {
                obj = new Employee1();
                obj.empno = int.Parse(obj1.empno.ToString());
                obj.empname = obj1.empname;
                //obj.job = obj1.job;
                //obj.deptno = int.Parse(obj1.deptno.ToString());
                obj.salary = int.Parse(obj1.salary.ToString());

                ls1.Add(obj);             
            }
            foreach (var obj1 in result1)
            {
                ViewBag.empno = obj1.empno;
                ViewBag.empname = obj1.empname;
                ViewBag.job = obj1.job;
                ViewBag.deptno = obj1.deptno;
                ViewBag.salary = obj1.salary;
            }
                con.Close();
            return View(ls1);

        }

        public ActionResult Register()
        {
            return View();
        }

        public ActionResult Register1(string text1, string text2, string text3, string text4, string text5)
        {
            con.Open();
            Employee1 obj = new Employee1();
            obj.empno = int.Parse(text1);
            obj.empname = text2;
            obj.job = text3;
            obj.deptno = int.Parse(text4);
            obj.salary = int.Parse(text5);

            SqlCommand cmd = new SqlCommand("insert into emp values(" + obj.empno + ",'" + obj.empname + "','" + obj.job + "'," + obj.deptno + "," + obj.salary + ")", con);
            cmd.ExecuteNonQuery();
            con.Close();
            return View();
        }

        public ActionResult Update()
        {
            return View();
        }
        public ActionResult Update1(string text1)
        {
            int empno = int.Parse(text1);
            Employee1 obj = new Employee1();
            SqlDataAdapter ad = new SqlDataAdapter("select * from emp where empno=" + empno + "", con);
            DataSet ds = new DataSet();
            ad.Fill(ds, "emp2");

            ViewBag.empno = ds.Tables["emp2"].Rows[0].ItemArray[0].ToString();
            ViewBag.empname = ds.Tables["emp2"].Rows[0].ItemArray[1].ToString();
            ViewBag.job = ds.Tables["emp2"].Rows[0].ItemArray[2].ToString();
            ViewBag.deptno = ds.Tables["emp2"].Rows[0].ItemArray[3].ToString();
            ViewBag.salary = ds.Tables["emp2"].Rows[0].ItemArray[4].ToString();
            return View();
        }

        public ActionResult Update2(string text1, string text2, string text3, string text4, string text5)
        {
            con.Open();
            Employee1 obj = new Employee1();
            obj.empno = int.Parse(text1);
            obj.empname = text2;
            obj.job = text3;
            obj.deptno = int.Parse(text4);
            obj.salary = int.Parse(text5);

            SqlCommand cmd = new SqlCommand("update emp set empno=" + obj.empno + ",empname='" + obj.empname + "',job='" + obj.job + "',deptno=" + obj.deptno + ",salary=" + obj.salary + " where empno=" + obj.empno + "", con);
            cmd.ExecuteNonQuery();
            

            con.Close();

            return View();
        }

        public ActionResult Delete()
        {
            return View();
        }
        public ActionResult Delete1(string text1)
        {
            int empno = int.Parse(text1);
            con.Open();
            SqlCommand cmd = new SqlCommand("delete from emp where empno="+empno+"",con);
            cmd.ExecuteNonQuery();
            

            con.Close();

            return View();
        }
    }
}



<form id="form1" action="EmployeeController1/Register1" method="post">
    <table width="40" bgcolor="yellow">
        <tr>
            <td>Empno</td>
            <td><input type="text" id="text1" name="text1" /></td>
        </tr>

        <tr>
            <td>Empname</td>
            <td><input type="text" id="text2" name="text2" /></td>
        </tr>

        <tr>
            <td>job</td>
            <td><input type="text" id="text3" name="text3" /></td>
        </tr>

        <tr>
            <td>Deptno</td>
            <td><input type="text" id="text4" name="text4" /></td>
        </tr>

        <tr>
            <td>Salary</td>
            <td><input type="text" id="text5" name="text5" /></td>
        </tr>

        <tr>
            <td><input type="submit" id="text5" name="text5" value="register" /></td>
            <td></td>
        </tr>


    </table>

</form>



@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<h1> Record Submitted SuccessFully..</h1>






<form id="form1" action="EmployeeController1/Update1" method="post">
    <table width="60%" bgcolor="yellow" border="1">
        <tr>
            <td>Enter Employee Number To Update</td>
            <td><input type="text" id="text1" name="text1" /></td>
            <td><input type="submit" id="submit1" name="submit1" value="Search" /></td>
        </tr>

    </table>
</form>




@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<h1>Employee Update Form</h1>
<hr />
<form id="form1" action="Update2" method="post">
    <table width="40" bgcolor="yellow">
        <tr>
            <td>Empno</td>
            <td><input type="text" id="text1" name="text1" value=@ViewBag.empno /></td>
        </tr>

        <tr>
            <td>Empname</td>
            <td><input type="text" id="text2" name="text2" value=@ViewBag.empname /></td>
        </tr>

        <tr>
            <td>job</td>
            <td><input type="text" id="text3" name="text3" value=@ViewBag.job /></td>
        </tr>

        <tr>
            <td>Deptno</td>
            <td><input type="text" id="text4" name="text4" value=@ViewBag.deptno /></td>
        </tr>

        <tr>
            <td>Salary</td>
            <td><input type="text" id="text5" name="text5" value=@ViewBag.salary /></td>
        </tr>

        <tr>
            <td><input type="submit" id="text5" name="text5" value="Update" /></td>
            <td></td>
        </tr>


    </table>

</form>


@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<h1>Upated Successfully...</h1>





@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<h1> Employee Deletion Form</h1>
<form id="form1" action="EmployeeController1/Delete1" method="post">
    <table width="60%" bgcolor="yellow" border="1">
        <tr>
            <td>Enter Employee Number To Delete</td>
            <td><input type="text" id="text1" name="text1" /></td>
            <td><input type="submit" id="submit1" name="submit1" value="Delete" /></td>
        </tr>

    </table>
</form>


@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<h1>Record Deleted Successfully...</h1>
